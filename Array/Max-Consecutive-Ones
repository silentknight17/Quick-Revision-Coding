/* Question---> Maximum Conbsective Ones in an array if we can exchange atmost K number of 0's.
Sample Test Case--> A=[1,1,1,0,0,0,1,1,1,1,0],K=2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]

Algorithm---> We can find the longest subarray with atmost k zeroes. For each a[j], try to find the longest subarray.
If a[i] ~ a[j] has zeroes <=k, we continue to increment j. If a[i]~a[j] has zeroes>k, we increment i as well as j.*/

#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n,k;
    cin>>n>>k;
    int a[n];
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    int z=0,i=0,ans=0;
    for(int j=0;j<n;j++)
    {
        if(a[j]==0)
        z++;
        while(z>k)
        {
            if(a[i]==0)
            z--;
            i++;
        }
        // Now , we meet our requirement of z<=k
        ans=max(ans,j-i+1);
    }
    cout<<ans<<endl;
    return 0;
}

