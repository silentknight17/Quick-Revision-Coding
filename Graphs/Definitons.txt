                                Short Defintions

1) Path between two vertices - All vertices which come in the path of two given
vertices is called their path.

2) Connected Graph- Each node has path from every other node.

3) Connected Components- Each connected graph in a disconnected graph is 
called a connected component.

4) Tree- Connected Acyclic graph.

Properties of Tree with n nodes->
 (i) Number of edges=n-1
 (ii) There are no cycles present.
 (iii) Each node has path from every other vertex.

5) Complete Graph - A graph in which each vertex is connected to every 
other vertex by a direct edge.

Properties of Complete Graph->
(i) Number of edges in a complete graph = nC2 =(n*(n-1))/2.

6) Representation of graphs->
(i) In the form of adjacenecy matrix.
(ii) In the form of adjacenecy graph.

Topological Sort-> It is an ordering of the nodes in a directed graph where 
for each directed edge from node A to node B, node A appears before node B 
in the ordering.

Note: 1)Topological orderings are not unique.
2) Topological sort occurs for only DAG(Directed Acyclic Graph).

Bipartite Graph-> 
1)It's vertices can be divided into two disjoint and independent sets U and V such that
every edge connects a vertex in U to one in V.

2)The graph does not contain any odd-length cycles.

3) The graph is 2 colorable.

If any of the above conditions are true, then all the conditions will be true.


Disjoint Set Union->

In this we denote the set by a leader, say 
A={1,2,,3,4}; suppose leader of A=2. B={5,6,7,8}; leader of B is 7.
Then we can find the union of the two sets by comparing their leaders.

Now, time complexities---->

       O(N) ----------> O(log N) ----------> O(alpha(N))= O(1), where alpha(N) is known as inverse Ackerman Constant.
    Union-find         Path Compression     Union by Rank/Size